## increase heap size# set _JAVA_OPTIONS=-Xmx4096m## Scenario settingsScenario.name = S_5-Photo_%%PhotoRouter.photo%%-Scenario_%%PhotoRouter.scenario%%-ActualPOI_%%PhotoRouter.poi%%Scenario.simulateConnections = falseScenario.updateInterval = 2.0## 43200s == 12hScenario.endTime = 337500#Scenario.endTime = 168750#Scenario.endTime = 84375## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterfacebtInterface.transmitSpeed = 256kbtInterface.transmitRange = 10# High speed, long range, interface for all nodeshighspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 512khighspeedInterface.transmitRange = 20## Initializing router parameterPhotoRouter.theta = 30PhotoRouter.phi = 60## total poi = tpoi, hidden poi = tpoi - poiPhotoRouter.tpoi = 100#PhotoRouter.poi = [25;50;75]PhotoRouter.poi = 50#PhotoRouter.photo = [1250;2500;5000;10000]PhotoRouter.photo = 2500PhotoRouter.kcvg = 1## focus distance is 160/10 = 16 meterPhotoRouter.focus = 160## length are in meters //similar as worldsize of movement modelPhotoRouter.worldSize = 4500, 3400## number of source nodes //similar as group1+group2 nodesPhotoRouter.nodeNum = 98#photoLimit : [25,50,100,200]PhotoRouter.photoLimit = 50## cluster range is 240/10 = 24 meterPhotoRouter.clusterRange = 240## PhotoRouter Data Source: [Synthetic={1}***Infocom={2}***Geolife={3}]PhotoRouter.dataSource = 2##PhotoRouter Scenario Type: [ No_limit={1}***Simple={2}***Simple_cluster={3}***Group_Cluster={4}***Group_Interest={5}***RAware={6}***SmartPhoto={7}***PhotoNet={8} ]PhotoRouter.scenario = [4;5;6;7;8]#PhotoRouter.scenario = 7## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... ) for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement## Define 2 different node groupsScenario.nrofHostGroups = 9## Common settings for all groups## Message TTL of 300 minutes (5 hours)Group.msgTtl = 300Group.movementModel = StationaryMovementGroup.nodeLocation = 0,1Group.router = PhotoRouterGroup.bufferSize = 100MGroup.nrofInterfaces = 1Group.interface1 = highspeedInterface## servers - 4	59	73	76	77## Group1 (Pedestrians) specific settingsGroup1.groupID = pGroup1.nrofHosts = 4## Group2 (Volunteer) specific settingsGroup2.groupID = vGroup2.nrofHosts = 1## Group3 (Pedestrians) specific settingsGroup3.groupID = pGroup3.nrofHosts = 54## Group4 (Volunteer) specific settingsGroup4.groupID = vGroup4.nrofHosts = 1## Group5 (Pedestrians) specific settingsGroup5.groupID = pGroup5.nrofHosts = 13## Group6 (Volunteer) specific settingsGroup6.groupID = vGroup6.nrofHosts = 1## Group7 (Pedestrians) specific settingsGroup7.groupID = pGroup7.nrofHosts = 2## Group8 (Volunteer) specific settingsGroup8.groupID = vGroup8.nrofHosts = 2## Group9 (Pedestrians) specific settingsGroup9.groupID = pGroup9.nrofHosts = 20## Message creation parameters Events.nrof = 1Events1.class = ExternalEventsQueueEvents1.filePath = reports/infocom_data/trace/haggle-one-infocom2006-complete.tsv# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)#Events1.interval = 25,35# Message sizes (500kB - 1MB)#Events1.size = 500k,1M# range of message source/destination addresses#Events1.hosts = 0,125# Message ID prefix#Events1.prefix = M## Reports - all report names have to be valid report classesReport.nrofReports = 1## length of the warm up period (simulated seconds)Report.warmup = 0## default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/infocom_data/Actual_Hidden/## Report classes to loadReport.report1 = PhotoReport#Report.report2 = MessageStatsReport## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 5# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4400, 3400# How long time to move hosts in the world before real simulation#MovementModel.warmup = 500## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings## GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png## Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20## Scaling factor for the imageGUI.UnderlayImage.scale = 4.75## Image rotation (radians)GUI.UnderlayImage.rotate = -0.015## how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100## Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)## GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$